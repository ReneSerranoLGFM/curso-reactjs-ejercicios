import React, { useEffect, useRef, useState } from "react";
import { chuckNorrisApi } from "../api/chuckNorris";
import Button from "@mui/material/Button";
import ThumbUpIcon from "@mui/icons-material/ThumbUp";
import ThumbDownIcon from "@mui/icons-material/ThumbDown";

// Generated by https://quicktype.io
export interface JokeResponse {
  icon_url: string;
  id: string;
  url: string;
  value: string;
}

export const Jokes = () => {
  const [joke, setJoke] = useState("");
  const [newJoke, setNewJoke] = useState(false);
  const [decided, setDecided] = useState(false)
  const [liked, setLiked] = useState(false);
  const [likedCounter, setLikedCounter] = useState(0);
  const [dislikedCounter, setDislikedCounter] = useState(0);

  // Get Chuck Norris joke function
  const getJoke = () => {
    chuckNorrisApi
      .get<JokeResponse>("/jokes/random")
      .then(function (response) {
        setDecided(false);
        setJoke(response.data.value);
        setNewJoke(true);
      })
      .catch(console.log);
  };

  // Like event
  const like = () => {
    if (newJoke) {
      setDecided(true);
      setLiked(true);
      setLikedCounter(likedCounter + 1);
      setNewJoke(false);
    }
  };

  // Dislike event
  const dislike = () => {
    if (newJoke) {
      setDecided(true);
      setLiked(false);
      setDislikedCounter(dislikedCounter + 1);
      setNewJoke(false);
    }
  };

  return (
    <>
      <Button variant="contained" onClick={getJoke}>
        Give Joke!
      </Button>
      <h4>{joke}</h4>
      <Button variant="contained" className="mb-2" onClick={like}>
        <ThumbUpIcon />
      </Button>
      <Button variant="contained" onClick={dislike}>
        <ThumbDownIcon />
      </Button>
      <span>
        {(decided) &&
          (liked ? "You like this joke! :P" : "You don't like it... :/")}
      </span>
      <br />
      <h4>Liked jokes: {likedCounter}</h4>
      <h4>Disliked jokes: {dislikedCounter}</h4>
    </>
  );
};
